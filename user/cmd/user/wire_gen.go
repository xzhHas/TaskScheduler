// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	zaplog "github.com/BitofferHub/pkg/middlewares/log"
	"github.com/BitofferHub/pkg/middlewares/discovery"
	"github.com/BitofferHub/user/internal/biz"
	"github.com/BitofferHub/user/internal/conf"
	"github.com/BitofferHub/user/internal/data"
	"github.com/BitofferHub/user/internal/server"
	"github.com/BitofferHub/user/internal/service"
	"github.com/gin-gonic/gin"
	"github.com/go-kratos/kratos/v2/transport/http"

	"github.com/go-kratos/kratos/v2"
)

// Injectors from wire.go:

// wireApp
//  @Author <a href="https://bitoffer.cn">狂飙训练营</a>
//  @Description: wireApp init kratos application.
//  @param conf
//  @return *kratos.App
//  @return func()
//  @return error
//
func wireApp(conf conf.Bootstrap) (*kratos.App, func(), error) {
	InitResource(conf)
	dataData,  err := data.NewData(conf.Data)
	//_,  err := data.NewCache(conf.Data, logger)

	if err != nil {
		return nil, nil, err
	}
	userRepo := data.NewUserRepo(dataData)
	userUsecase := biz.NewUserUsecase(userRepo)
	userService := service.NewUserService(userUsecase)
	us = userService
	grpcServer := server.NewGRPCServer(conf.Server, userService)
	httpSvr2 := CreateHttpSvr(conf.Server)
	app := newApp(conf.Micro, grpcServer, httpSvr2)
	return app, func() {
	//	cleanup()
	}, nil
}

var us *service.UserService
//
// CreateHttpSvr
//  @Author <a href="https://bitoffer.cn">狂飙训练营</a>
//  @Description:  create gin http handler
//  @return *http.Server
//
func CreateHttpSvr(c *conf.Server) *http.Server{
	router := gin.Default()

	// 使用gin中间件
	router.Use(InfoLog())
	router.GET("/get_user_info", GetUserInfo)
	httpSrv := http.NewServer(http.Address(c.Http.Addr))
	httpSrv.HandlePrefix("/", router)
	return httpSrv
}

//
// InitResource
//  @Author <a href="https://bitoffer.cn">狂飙训练营</a>
//  @Description: 初始化资源
//  @param conf
//
func InitResource(conf conf.Bootstrap) {
	discovery.NewRegistrar([]string{conf.Micro.Lb.GetAddr()})
	zaplog.Init(
		zaplog.WithLogPath("../log/"),
		zaplog.WithLogLevel("info"),
		zaplog.WithFileName("bitstorm.log"),
		zaplog.WithMaxBackups(100),
		zaplog.WithMaxSize(1024 * 1024 * 10),
		)
}